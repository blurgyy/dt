import{_ as e,c as i,o as a,a as o}from"./app.8da8cbf3.js";const p='{"title":"Overview","description":"","frontmatter":{"title":"Overview"},"headers":[{"level":2,"title":"Synopsis","slug":"synopsis"},{"level":2,"title":"Usage","slug":"usage"},{"level":2,"title":"Configuration","slug":"configuration"}],"relativePath":"index.md","lastUpdated":1633878151061}',n={},t=o(`<h1 id="overview" tabindex="-1">Overview <a class="header-anchor" href="#overview" aria-hidden="true">#</a></h1><h2 id="synopsis" tabindex="-1">Synopsis <a class="header-anchor" href="#synopsis" aria-hidden="true">#</a></h2><p><code>dt-cli</code> is a highly customizable dotfile manager.</p><h2 id="usage" tabindex="-1">Usage <a class="header-anchor" href="#usage" aria-hidden="true">#</a></h2><p><code>dt-cli</code> takes a configuration file and issues syncing process defined in the config file. For example, a config file lies at <code>~/.config/dt/cli.toml</code>, use</p><div class="language-shell"><pre><code>$ dt-cli ~/.config/dt/cli.toml
</code></pre></div><p>to run with defined behaviours in config.</p><p><strong>Command line options &amp; flags</strong></p><ul><li><code>-d|--dry-run</code>: Show changes to be made without actually syncing files.</li></ul><h2 id="configuration" tabindex="-1">Configuration <a class="header-anchor" href="#configuration" aria-hidden="true">#</a></h2><p>See the <a href="/config/guide/">hands-on guide</a> for creating a configuration file.</p>`,11),s=[t];function d(r,c,l,h,f,g){return a(),i("div",null,s)}var _=e(n,[["render",d]]);export{p as __pageData,_ as default};
