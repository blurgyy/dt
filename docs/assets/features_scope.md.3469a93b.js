import{_ as n,c as s,o as a,a as t}from"./app.b78d5d90.js";const h='{"title":"Priority Resolving","description":"","frontmatter":{},"headers":[{"level":2,"title":"Background","slug":"background"},{"level":2,"title":"Scope","slug":"scope"},{"level":2,"title":"Examples","slug":"examples"},{"level":3,"title":"Dropin","slug":"dropin"},{"level":3,"title":"App","slug":"app"},{"level":3,"title":"General","slug":"general"}],"relativePath":"features/scope.md","lastUpdated":1638280022245}',e={},o=t(`<h1 id="priority-resolving" tabindex="-1">Priority Resolving <a class="header-anchor" href="#priority-resolving" aria-hidden="true">#</a></h1><h2 id="background" tabindex="-1">Background <a class="header-anchor" href="#background" aria-hidden="true">#</a></h2><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>Here explains why such a feature is desirable, feel free to skip this subsection.</p></div><p>Since <code>dt-cli</code> syncs your dotfiles on a per-group basis, you don&#39;t want to run through all of the groups when only a single file is modified in your dotfile library. For example, when you updated your shell init script, you might run the following command:</p><div class="language-shell"><pre><code>$ dt-cli shell
 INFO  dt_core::syncing <span class="token operator">&gt;</span> Local group: <span class="token punctuation">[</span>shell<span class="token punctuation">]</span>
</code></pre></div><p>Nevertheless, sometimes you have to run a full sync, which involves all of your defined groups in your config file. It may look like this:</p><div class="language-shell"><pre><code>$ dt-cli
 INFO  dt_core::syncing <span class="token operator">&gt;</span> Local group: <span class="token punctuation">[</span>gdb<span class="token punctuation">]</span>
 INFO  dt_core::syncing <span class="token operator">&gt;</span> Local group: <span class="token punctuation">[</span>ssh<span class="token punctuation">]</span>
 INFO  dt_core::syncing <span class="token operator">&gt;</span> Local group: <span class="token punctuation">[</span>gpg<span class="token punctuation">]</span>
 INFO  dt_core::syncing <span class="token operator">&gt;</span> Local group: <span class="token punctuation">[</span>systemd<span class="token punctuation">]</span>
 INFO  dt_core::syncing <span class="token operator">&gt;</span> Local group: <span class="token punctuation">[</span>dt<span class="token punctuation">]</span>
 INFO  dt_core::syncing <span class="token operator">&gt;</span> Local group: <span class="token punctuation">[</span>nvim<span class="token punctuation">]</span>
 INFO  dt_core::syncing <span class="token operator">&gt;</span> Local group: <span class="token punctuation">[</span>fontconfig<span class="token punctuation">]</span>
 INFO  dt_core::syncing <span class="token operator">&gt;</span> Local group: <span class="token punctuation">[</span>shell<span class="token punctuation">]</span>
 INFO  dt_core::syncing <span class="token operator">&gt;</span> Local group: <span class="token punctuation">[</span>gui<span class="token punctuation">]</span>
 INFO  dt_core::syncing <span class="token operator">&gt;</span> Local group: <span class="token punctuation">[</span>xdg_config_home<span class="token punctuation">]</span>
 INFO  dt_core::syncing <span class="token operator">&gt;</span> Local group: <span class="token punctuation">[</span>misc<span class="token punctuation">]</span>
</code></pre></div><p>Some groups may contain overlapping source items, in the above example, group <code>xdg_config_home</code> contains <code>fontconfig</code> and <code>dt</code>&#39;s base directories. It&#39;s neither friendly nor efficient for <code>dt-cli</code> to sync the same item twice or even more times: it&#39;s slow, and the final result depends on the order of the definitions of the groups.</p><h2 id="scope" tabindex="-1">Scope <a class="header-anchor" href="#scope" aria-hidden="true">#</a></h2><p><code>dt-cli</code> solves this problem by defining an extra attribute <code>scope</code> for each group.</p><p>A group&#39;s <a href="/config/key-references.html#scope"><code>scope</code></a> decides the priority of it being synced. There are 3 predefined scopes, namely <code>Dropin</code>, <code>App</code> and <code>General</code>. The names are pretty much self-explanatory:</p><ul><li><code>General</code> groups have the lowest priority. They are typically meant for the parent directories of your dotfile library.</li><li><code>Dropin</code> groups have the highest priority. They are typically meant for those items that come from external sources as drop-in replacements, such as files from a system directory that is managed by your system&#39;s package manager.</li><li><code>App</code> groups have medium priority. As the name implies, it is meant for some specific application, for example, a group containing your config files for GUI applications, or a group containing your shell/editor preferences/init scripts, etc..</li></ul><div class="info custom-block"><p class="custom-block-title">NOTE</p><p>A <code>scope</code> key in a group&#39;s definition is optional. When omitted, the default value of <code>scope</code> is <code>General</code>.</p></div><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>Generally, a larger scope has a lower priority.</p></div><div class="warning custom-block"><p class="custom-block-title">WARNING</p><p>If a file is included in multiple groups that have the same <code>scope</code>, it will only be synced by the first group, later defined groups (with the same <code>scope</code>) won&#39;t repeatedly sync the file.</p></div><h2 id="examples" tabindex="-1">Examples <a class="header-anchor" href="#examples" aria-hidden="true">#</a></h2><h3 id="dropin" tabindex="-1"><code>Dropin</code> <a class="header-anchor" href="#dropin" aria-hidden="true">#</a></h3><p>On <a href="https://archlinux.org" target="_blank" rel="noopener noreferrer">Arch Linux</a>, package <a href="https://archlinux.org/packages/extra/x86_64/fontconfig/" target="_blank" rel="noopener noreferrer"><code>fontconfig</code></a> provides a file <code>/usr/share/fontconfig/conf.avail/10-sub-pixel-rgb.conf</code>, which <a href="http://www.lagom.nl/lcd-test/subpixel.php" target="_blank" rel="noopener noreferrer">works for most monitors</a>. A drop-in group can be defined as:</p><div class="language-toml"><pre><code><span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token table class-name">local</span><span class="token punctuation">]</span><span class="token punctuation">]</span>
<span class="token key property">scope</span> <span class="token punctuation">=</span> <span class="token string">&quot;Dropin&quot;</span>
<span class="token key property">name</span> <span class="token punctuation">=</span> <span class="token string">&quot;fontconfig-system&quot;</span>
<span class="token key property">basedir</span> <span class="token punctuation">=</span> <span class="token string">&quot;/usr/share/fontconfig/conf.avail/&quot;</span>
<span class="token key property">sources</span> <span class="token punctuation">=</span> <span class="token punctuation">[</span>
  <span class="token comment"># Pixel Alignment.  Test monitor&#39;s subpixel layout at</span>
  <span class="token comment"># &lt;http://www.lagom.nl/lcd-test/subpixel.php&gt;, reference:</span>
  <span class="token comment"># &lt;https://wiki.archlinux.org/title/Font_configuration#Pixel_alignment&gt;</span>
  <span class="token string">&quot;10-sub-pixel-rgb.conf&quot;</span><span class="token punctuation">,</span>
  <span class="token comment"># Enable lcdfilter.  Reference:</span>
  <span class="token comment"># &lt;https://forum.endeavouros.com/t/faq-bad-font-rendering-in-firefox-and-other-programs/13430/3&gt;</span>
  <span class="token string">&quot;11-lcdfilter-default.conf&quot;</span><span class="token punctuation">,</span>
<span class="token punctuation">]</span>
<span class="token key property">target</span> <span class="token punctuation">=</span> <span class="token string">&quot;~/.config/fontconfig/conf.d&quot;</span>
</code></pre></div><h3 id="app" tabindex="-1"><code>App</code> <a class="header-anchor" href="#app" aria-hidden="true">#</a></h3><p>For example, a group of GUI applications under the <a href="https://wayland.freedesktop.org" target="_blank" rel="noopener noreferrer">wayland protocol</a> could be defined as:</p><div class="language-toml"><pre><code><span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token table class-name">local</span><span class="token punctuation">]</span><span class="token punctuation">]</span>
<span class="token key property">scope</span> <span class="token punctuation">=</span> <span class="token string">&quot;General&quot;</span>
<span class="token key property">name</span> <span class="token punctuation">=</span> <span class="token string">&quot;gui&quot;</span>
<span class="token key property">basedir</span> <span class="token punctuation">=</span> <span class="token string">&quot;/path/to/your/dotfiles/library/root&quot;</span>
<span class="token key property">sources</span> <span class="token punctuation">=</span> <span class="token punctuation">[</span>
  <span class="token string">&quot;.gtkrc-2.0&quot;</span><span class="token punctuation">,</span>
  <span class="token string">&quot;.local/share/icons&quot;</span><span class="token punctuation">,</span>
  <span class="token string">&quot;.local/share/fcitx5&quot;</span><span class="token punctuation">,</span>
  <span class="token string">&quot;.config/sway&quot;</span><span class="token punctuation">,</span>
  <span class="token string">&quot;.config/swaylock&quot;</span><span class="token punctuation">,</span>
  <span class="token string">&quot;.config/waybar&quot;</span><span class="token punctuation">,</span>
  <span class="token string">&quot;.config/dunst&quot;</span><span class="token punctuation">,</span>
  <span class="token string">&quot;.config/gtk-*.0&quot;</span><span class="token punctuation">,</span>
<span class="token punctuation">]</span>
<span class="token key property">target</span> <span class="token punctuation">=</span> <span class="token string">&quot;~&quot;</span>
</code></pre></div><h3 id="general" tabindex="-1"><code>General</code> <a class="header-anchor" href="#general" aria-hidden="true">#</a></h3><p>This scope is mostly used in the fallback groups, for example:</p><div class="language-toml"><pre><code><span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token table class-name">local</span><span class="token punctuation">]</span><span class="token punctuation">]</span>
<span class="token key property">scope</span> <span class="token punctuation">=</span> <span class="token string">&quot;General&quot;</span>
<span class="token key property">name</span> <span class="token punctuation">=</span> <span class="token string">&quot;xdg_config_home&quot;</span>
<span class="token key property">basedir</span> <span class="token punctuation">=</span> <span class="token string">&quot;/path/to/your/dotfiles/library/root/.config&quot;</span>
<span class="token key property">sources</span> <span class="token punctuation">=</span> <span class="token punctuation">[</span>
  <span class="token string">&quot;*&quot;</span><span class="token punctuation">,</span>
<span class="token punctuation">]</span>
<span class="token key property">target</span> <span class="token punctuation">=</span> <span class="token string">&quot;~/.config&quot;</span>
<span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token table class-name">local</span><span class="token punctuation">]</span><span class="token punctuation">]</span>
<span class="token key property">scope</span> <span class="token punctuation">=</span> <span class="token string">&quot;General&quot;</span>
<span class="token key property">name</span> <span class="token punctuation">=</span> <span class="token string">&quot;misc&quot;</span>
<span class="token key property">basedir</span> <span class="token punctuation">=</span> <span class="token string">&quot;/path/to/your/dotfiles/library/root&quot;</span>
<span class="token key property">sources</span> <span class="token punctuation">=</span> <span class="token punctuation">[</span>
  <span class="token string">&quot;.[!.]*&quot;</span><span class="token punctuation">,</span>
  <span class="token string">&quot;..?*&quot;</span><span class="token punctuation">,</span>
<span class="token punctuation">]</span>
<span class="token key property">target</span> <span class="token punctuation">=</span> <span class="token string">&quot;~&quot;</span>
</code></pre></div>`,25),p=[o];function c(r,l,i,u,d,k){return a(),s("div",null,p)}var f=n(e,[["render",c]]);export{h as __pageData,f as default};
